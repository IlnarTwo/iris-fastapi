# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1cUKOalvC44XWPZJQPCBlGXC4Y3QhnRYg
"""

import numpy as np
from sklearn import datasets
import keras
from keras.models import Sequential
from keras.layers import Dense
from sklearn import model_selection

seed = 2986
np.random.seed(seed)

iris = datasets.load_iris()
x=iris.data
y=iris.target

X_train, X_test, y_train, y_test = model_selection.train_test_split(x, y, test_size=0.2)
y_train = keras.utils.to_categorical(y_train, 3)
y_test_cat = keras.utils.to_categorical(y_test, 3)

model = Sequential()
model.add(Dense(16, input_dim = 4, activation ='relu'))
model.add(Dense(16, activation='relu'))
model.add(Dense(3, activation='softmax'))

model.compile(loss = 'mse', optimizer = 'adam', metrics = ['accuracy'])

model.summary()

model.fit(X_train, y_train, epochs = 65, batch_size = 10, verbose = 0)

scores=model.evaluate(X_test, y_test_cat, verbose=2)

print("%s: %.2f%%" % (model.metrics_names[0], scores[0]*100))
print("%s: %.2f%%" % (model.metrics_names[1], scores[1]*100))

classes = model.predict(X_test)

accuration = np.sum(np.around(classes) == y_test_cat)/ (len(classes)*3)*100
print("Точность прогнозирования: " + str(accuration) + '%')
print("Прогноз:")
print(np.around(classes))
print("На самом деле:")
print(y_test_cat)
print(np.around(classes) == y_test_cat)